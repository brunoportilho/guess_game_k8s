apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    events {
    worker_connections  1024;
    }

    http {
          # Config para corrigir layout do index.
          ## teste se copia esse
          include /etc/nginx/mime.types;
          sendfile on;
          
          upstream backend {
              ip_hash;
              server backend:5000;
          }

          server {
              listen 80;

              location / {
                  root /usr/share/nginx/html;
                  index index.html index.htm;
                  try_files $uri $uri/ /index.html;
              }

              location /api/ {
                  proxy_pass http://backend/;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1 
      maxSurge: 1 
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: bportilho/gg_frontend:2.0
          env:
            - name: REACT_APP_BACKEND_URL
              #value: backend
          ports:
            - containerPort: 80  
          volumeMounts:
            - mountPath: "/etc/nginx/nginx.conf"
              subPath: nginx.conf
              readOnly: true
              name: nginx-conf
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf
          items:
            - key: nginx.conf
              path: nginx.conf
      restartPolicy: Always
          
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-svc
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30080
  type: NodePort  # ingress controller